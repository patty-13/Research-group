from tkinter import *
import json
import pandas as pd
from datetime import date
root=Tk()
root.title("UI for Data Filtering")
root.geometry('600x450')
lbl=Label(root, text="Ready for filtering?",anchor="w")
lbl.grid()
def parse_data():
    filtr=Tk()
    root.destroy()
    filtr.title("Cleaning Data Intiation")
    filtr.geometry('600x450')
    lf1=Label(filtr,text="Input Data File Location for parsing",anchor="w")
    lf1.grid()
    lf1_2=Label(filtr,text="Enter Path",anchor="w")
    lf1_2.grid(column=0,row=3)
    txt1=Entry(filtr,width=30)
    txt1.grid(column=0,row=1)
    def fetch_file():
        lf1_2.configure(text=txt1.get(),anchor="w")
        s=str(txt1.get())
        #print(s)
        df1= pd.read_json(s)
        df1=df1.drop(['sparql_dbpedia18','type','answer','entity_mentions_question','entity_mentions_question_paraphrased'],axis=1)
        attributes=list(df1.keys())
        def display():
            filtr2=Tk()
            filtr.destroy()
            filtr2.title("Cleaning Data Intiation")
            filtr2.geometry('1200x1200')
            shape=df1.shape
            count=0
            l_c=Label(filtr2,text="Count:",anchor="w")
            l_c.grid(column=0,row=0)
            l_count=Label(filtr2,text="-1",anchor="w")
            l_count.grid(column=1,row=0)
            l1=Label(filtr2,text=attributes[0],anchor="w")
            l1.grid(column=0,row=1)
            l2=Label(filtr2,text=attributes[1],anchor="w")
            l2.grid(column=0,row=2)
            l3=Label(filtr2,text=attributes[2],anchor="w")
            l3.grid(column=0,row=3)
            l4=Label(filtr2,text=attributes[3],anchor="w")
            l4.grid(column=0,row=4)
            l5=Label(filtr2,text=attributes[4],anchor="w")
            l5.grid(column=0,row=5)
            l6=Label(filtr2,text=attributes[5],anchor="w")
            l6.grid(column=0,row=6)
            l7=Label(filtr2,text=attributes[6],anchor="w")
            l7.grid(column=0,row=7)
            l8=Label(filtr2,text=attributes[7],anchor="w")
            l8.grid(column=0,row=8)
            l9=Label(filtr2,text=attributes[8],anchor="w")
            l9.grid(column=0,row=9)
            l1v=Label(filtr2,text="Attribute 1",anchor="w")
            l1v.grid(column=1,row=1)
            l2v=Label(filtr2,text="Attribute 2",anchor="w")
            l2v.grid(column=1,row=2)
            l3v=Label(filtr2,text="Attribute 3",anchor="w")
            l3v.grid(column=1,row=3)
            l4v=Label(filtr2,text="Attribute 4",anchor="w")
            l4v.grid(column=1,row=4)
            l5v=Label(filtr2,text="Attribute 5",anchor="w")
            l5v.grid(column=1,row=5)
            l6v=Label(filtr2,text="Attribute 6",anchor="w")
            l6v.grid(column=1,row=6)
            l7v=Label(filtr2,text="Attribute 7",anchor="w")
            l7v.grid(column=1,row=7)
            l8v=Label(filtr2,text="Attribute 8",anchor="w")
            l8v.grid(column=1,row=8)
            l9v=Label(filtr2,text="Attribute 9",anchor="w")
            l9v.grid(column=1,row=9)
            def d1():
                if l_count.cget('text')=="-1":
                    for i in range(shape[1]):
                        if i==0:
                            continue
                        l1v.configure(text=df1.iloc[0][0],anchor="w")
                        l2v.configure(text=df1.iloc[0][1],anchor="w")
                        l3v.configure(text=df1.iloc[0][2],anchor="w")
                        l4v.configure(text=df1.iloc[0][3],anchor="w")
                        l5v.configure(text=df1.iloc[0][4],anchor="w")
                        l6v.configure(text=df1.iloc[0][5],anchor="w")
                        l7v.configure(text=df1.iloc[0][6],anchor="w")
                        l8v.configure(text=df1.iloc[0][7],anchor="w")
                        l9v.configure(text=df1.iloc[0][8],anchor="w")
                    c=str(l_count.cget('text'))
                    c=int(c)
                    c+=1
                    l_count.configure(text=str(c),anchor="w")
                else:
                    c=str(l_count.cget('text'))
                    c=int(c)
                    c+=1
                    l_count.configure(text=str(c),anchor="w")
                    for i in range(shape[1]):
                        if i==0:
                            continue
                        l1v.configure(text=df1.iloc[c][0],anchor="w")
                        l2v.configure(text=df1.iloc[c][1],anchor="w")
                        l3v.configure(text=df1.iloc[c][2],anchor="w")
                        l4v.configure(text=df1.iloc[c][3],anchor="w")
                        l5v.configure(text=df1.iloc[c][4],anchor="w")
                        l6v.configure(text=df1.iloc[c][5],anchor="w")
                        l7v.configure(text=df1.iloc[c][6],anchor="w")
                        l8v.configure(text=df1.iloc[c][7],anchor="w")
                        l9v.configure(text=df1.iloc[c][8],anchor="w")
                def d3():
                    filtr3=Tk()
                    filtr3.geometry('300x300')
                    filtr3.title("Edit" + str(l_count.cget('text')))
                    lf3=Label(filtr3,text="Attribute No.?",anchor="w")
                    lf3.grid()
                    txtf3=Entry(filtr3,width=30)
                    txtf3.grid(column=0,row=1)
                    lf4=Label(filtr3,text="New Value?",anchor="w")
                    lf4.grid(column=0,row=2)
                    lf5=Label(filtr3,text="Change Value Process Started",anchor="w")
                    lf5.grid(column=0,row=4)
                    txtf3_1=Entry(filtr3,width=30)
                    txtf3_1.grid(column=0,row=3)
                    def d4():
                        rn=str(l_count.cget('text'))
                        rn=int(rn)
                        cn=str(txtf3.get())
                        cn=int(cn)
                        df1.at[rn,attributes[cn-1]]=str(txtf3_1.get())
                        if df1.iloc[rn][attributes[cn-1]]==str(txtf3_1.get()):
                            lf5.configure(text="Value Not Changed",anchor="w")
                        else:
                               lf5.configure(text="Value Changed",anchor="w")
                        def d5():
                            today = date.today()
                            df1.to_csv(r'D:\\internship\\train_test_with_entities_mentions\\'+ str(today) +'.csv')
                        bd4=Button(filtr3,text="Save File",command=d5)
                        bd4.grid(column=0,row=5)
                    bd3=Button(filtr3,text="Enter",command=d4)
                    bd3.grid(column=0,row=10)
                bd2=Button(filtr2,text="Edit",command=d3)
                bd2.grid(column=0,row=10)
            bd1=Button(filtr2,text="Next",command=d1)
            bd1.grid(column=0,row=11)
            filtr2.mainloop()
        bd=Button(filtr,text="Show",command=display)
        bd.grid(column=0,row=4)
        today = date.today()
        df1.to_json(r'D:\\internship\\train_test_with_entities_mentions\\'+ str(today) +'.json')
    bf1=Button(filtr,text="Get Path",command=fetch_file)
    bf1.grid(column=0,row=2)
    filtr.mainloop()
    #filtr.mainloop()
b1=Button(root,text="Start Filtering",command=parse_data)
b1.grid(column=2,row=0)
root.mainloop()

